language: bash

services:
  - docker
env:
  global:
    - AWS_ACCESS_KEY_ID=AKIAUMYEOMD5JGE4UVGR
    - AWS_SECRET_ACCESS_KEY=WDkKLWN\/VFkuP8HjFdzSZLEARtVs4aIn\+8mwOdo5
    - AWS_DEFAULT_REGION=us-west-1
before_install:
  - echo "Creating Docker volume"
  - ls -l
  - docker volume create appdome_shared_volume
#  - ls -l
#  - pip install awscli
#before_install:
#  - echo -e "machine github.com\n  login $GITHUB_TOKEN" >> ~/.netrc
#  - sudo apt-get update
##  - sudo apt-get install -y jq yq
#
#install:
#  - pip install -r requirements.txt

script:
  - echo "Running Appdome Travis CI Plugin"
    # Pull the pre-built Docker image
  - docker pull galcappdome/travis_plugin:latest
  - ls -l $(pwd)
  - chmod +x $(pwd)/*
  # Run the Docker container, mount the config.yml, and execute entrypoint.sh
  - docker run -d --name appdome_container -v $(pwd)/config.yml:/appdome/config.yml -v $(pwd)/output:/appdome/output -v $(pwd)/files:/appdome/files galcappdome/travis_plugin:latest /bin/bash -c "/appdome/trigger_travis_appdome_workflow.sh"
  - ls -l
  - ls -l files
#  - echo "content of test_file.txt from the container before finished:"
#  - cat myfile.txt
#  - chmod +x $(pwd)/appdome_shared_volume/output
#  - chmod +x $(pwd)/appdome_shared_volume/output/*
#  - chmod +x $(pwd)/files
#  - chmod +x $(pwd)/files/*
#  - ls -l $(pwd)
#  - ls -l $(pwd)/appdome_from_container
#  - ls -l $(pwd)/appdome_from_container/output
#  - ls -l $(pwd)/appdome_from_container/files
##  - chown -R travis:travis output files
#  - ls -l $(pwd)/output
#  - ls -l $(pwd)/files
  - ls -l
  - docker wait appdome_container
  - docker logs appdome_container
  - ls -l files
  - ls -l output
#  - docker run --rm -v appdome_shared_volume:/app/shared -v $(pwd):/host busybox cp -r /app/shared/output /host/
#  - docker run --rm -v appdome_shared_volume:/app/shared alpine sh -c "ls -l /app/shared; ls -l /app/shared/output; ls -l /app/shared/files"
#  - ls -l
#  - ls -l $(pwd)/output
#  - ls -l $(pwd)/files
#  - ls -l $(pwd)
#  - ls -l $(pwd)/output
#  - ls -l $(pwd)/files
#  - ls -l ./output


after_success:
  - echo "Build succeeded!"
  - ls -l $(pwd)/output
  - ls -l $(pwd)/files

after_failure:
  - echo "Build failed!"
  - ls -l $(pwd)/output
  - ls -l $(pwd)/files